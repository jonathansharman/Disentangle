import Graphics2D;
import Graphics2DText;
import TwoCansAlpha2;

const MIN_NODE_COUNT = 8;

class TitleScene : AbstractScene {
	static field nodeCount = MIN_NODE_COUNT;
	static field selection = 0;

	field font = FontResource
		.fromSystem("Times New Roman")
		.getRenderer()
		.setSize(20)
		.setColor(0, 0, 0);
	field title;
	field options;

	constructor() : base() {
		this.title = this.font.setSize(36).render("Disentangle");
		this.font.setSize(20);
		this.options =
			[ this.font.render("1) Relaxation mode")
			, this.font.render("2) Timed mode")
			, this.font.render("3) Move-counted mode")
			];
	}

	function update(inputManager, events) {
		if (inputManager.isKeyPressed(KeyboardKey.NUM_1)) {
			this.switchScene(new MainScene(GameMode.RELAX, TitleScene.nodeCount));
		} else if (inputManager.isKeyPressed(KeyboardKey.NUM_2)) {
			this.switchScene(new MainScene(GameMode.TIMED, TitleScene.nodeCount));
		} else if (inputManager.isKeyPressed(KeyboardKey.NUM_3)) {
			this.switchScene(new MainScene(GameMode.MOVES, TitleScene.nodeCount));
		}

		if (inputManager.isKeyPressedThisFrame(KeyboardKey.UP)) {
			TitleScene.selection = (TitleScene.selection - 1) % this.options.length;
		}
		if (inputManager.isKeyPressedThisFrame(KeyboardKey.DOWN)) {
			TitleScene.selection = (TitleScene.selection + 1) % this.options.length;
		}
		if (inputManager.isKeyPressedThisFrame(KeyboardKey.LEFT) && TitleScene.nodeCount > MIN_NODE_COUNT) {
			--TitleScene.nodeCount;
		}
		if (inputManager.isKeyPressedThisFrame(KeyboardKey.RIGHT)) {
			++TitleScene.nodeCount;
		}

		if (inputManager.isKeyPressed(KeyboardKey.SPACE) || inputManager.isKeyPressed(KeyboardKey.ENTER)) {
			switch (TitleScene.selection) {
				case 0:
					this.switchScene(new MainScene(GameMode.RELAX, TitleScene.nodeCount));
					return;
				case 1:
					this.switchScene(new MainScene(GameMode.TIMED, TitleScene.nodeCount));
					return;
				case 2:
					this.switchScene(new MainScene(GameMode.MOVES, TitleScene.nodeCount));
					return;
			}
		}
	}

	function render() {
		Graphics2D.Draw.fill(212, 212, 212);
		this.title.draw
			( X_RES / 2 - this.title.width / 2
			, Y_RES / 4 - this.title.height / 2
			);
		for (i = 0; i < this.options.length; ++i) {
			if (i == TitleScene.selection) {
				Graphics2D.Draw.rectangle
					( X_RES / 2 - this.options[i].width / 2
					, Y_RES / 2 - this.options[i].height / 2 + 40 * i
					, this.options[i].width
					, this.options[i].height
					, 160, 160, 160
					);
			}
			this.options[i].draw
				( X_RES / 2 - this.options[i].width / 2
				, Y_RES / 2 - this.options[i].height / 2 + 40 * i
				);
		}

		nodeCountText = this.font.render("< " + TitleScene.nodeCount + " >");
		nodeCountText.draw
			( X_RES / 2 - nodeCountText.width / 2
			, 4 * Y_RES / 5 - nodeCountText.height / 2
			);
	}
}
